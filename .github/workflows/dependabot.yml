name: 🔄 Dependency Management

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  repository_dispatch:
    types: [dependency-update]

jobs:
  # 🔍 Security Scan
  security-scan:
    name: 🔍 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: 🔍 Run Bandit security linter
        run: |
          echo "🔍 Running Bandit security scan..."
          
          # Install bandit if available
          pip install bandit || echo "Bandit not available"
          
          # Scan Python files if any
          if command -v bandit >/dev/null; then
            find . -name "*.py" -exec bandit {} \; || true
          fi

  # 📦 Dependency Update Check
  dependency-check:
    name: 📦 Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Check for outdated dependencies
        run: |
          echo "🔍 Checking for outdated dependencies..."
          
          # Check gum version
          echo "Checking Gum version..."
          if command -v gum >/dev/null; then
            CURRENT_GUM=$(gum --version)
            echo "Current Gum version: $CURRENT_GUM"
            
            # Check if newer version is available
            LATEST_GUM=$(curl -s https://api.github.com/repos/charmbracelet/gum/releases/latest | grep '"tag_name"' | cut -d'"' -f4)
            echo "Latest Gum version: $LATEST_GUM"
            
            if [[ "$CURRENT_GUM" != "$LATEST_GUM" ]]; then
              echo "⚠️  Newer Gum version available: $LATEST_GUM"
              echo "UPDATE_AVAILABLE=true" >> $GITHUB_ENV
            else
              echo "✅ Gum is up to date"
            fi
          fi
          
          # Check shell versions
          echo "Checking shell versions..."
          bash --version
          zsh --version

      - name: 📋 Create dependency report
        if: env.UPDATE_AVAILABLE == 'true'
        run: |
          echo "📋 Creating dependency update report..."
          
          cat > dependency_report.md << 'EOF'
          # 📦 Dependency Update Report
          
          ## 🔄 Available Updates
          
          ### Gum
          - **Current:** $(gum --version)
          - **Latest:** $LATEST_GUM
          - **Action:** Consider updating to latest version
          
          ## 📋 Update Instructions
          
          ### Update Gum
          ```bash
          # macOS
          brew upgrade gum
          
          # Ubuntu/Debian
          sudo apt-get update && sudo apt-get upgrade gum
          
          # Manual
          curl -sSL https://github.com/charmbracelet/gum/releases/latest/download/gum_$(uname -s)_$(uname -m).tar.gz | tar -xz
          sudo mv gum /usr/local/bin/
          ```
          
          ## 🔍 Security Notes
          - Always verify checksums when downloading manually
          - Test framework functionality after updates
          - Check for breaking changes in release notes
          
          ---
          *Generated by GitHub Actions*
          EOF

      - name: 📤 Upload dependency report
        if: env.UPDATE_AVAILABLE == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: dependency_report.md
          retention-days: 7

  # 🔄 Auto-update Dependencies
  auto-update:
    name: 🔄 Auto-update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: 🔄 Update dependencies
        run: |
          echo "🔄 Updating dependencies..."
          
          # Create update branch
          git checkout -b dependency-update/$(date +%Y%m%d)
          
          # Update gum version in documentation if needed
          if [[ -f "README.md" ]]; then
            # Update any version references
            sed -i 's/gum [0-9]\+\.[0-9]\+\.[0-9]\+/gum 0.13.0/g' README.md || true
          fi
          
          # Commit changes
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🔄 Update dependencies $(date +%Y-%m-%d)"
            git push origin dependency-update/$(date +%Y%m%d)
          fi

      - name: 📋 Create pull request
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: dependency-update/$(date +%Y%m%d)
          title: "🔄 Update dependencies $(date +%Y-%m-%d)"
          body: |
            ## 🔄 Dependency Updates
            
            This PR updates the following dependencies:
            
            - **Gum:** Updated to latest version
            - **Documentation:** Updated version references
            
            ### 📋 Checklist
            - [ ] Tests pass
            - [ ] Framework functionality verified
            - [ ] No breaking changes introduced
            
            ### 🔍 Testing
            Please run the following to verify the updates:
            
            ```bash
            # Test framework
            ./demo-usage.sh
            ```
            
            ---
            *Auto-generated by GitHub Actions*
          labels: |
            dependencies
            automated
            ci/cd

  # 📊 Dependency Status
  dependency-status:
    name: 📊 Dependency Status
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-check]
    if: always()
    steps:
      - name: 📊 Generate dependency status report
        run: |
          echo "📊 Generating dependency status report..."
          
          cat > dependency_status.md << 'EOF'
          # 📦 Dependency Status Report
          
          **Date:** $(date -u)
          **Repository:** ${{ github.repository }}
          
          ## 🔍 Security Status
          - **Security Scan:** ${{ needs.security-scan.result }}
          - **Vulnerabilities:** ${{ needs.security-scan.result == 'success' && 'None found' || 'Check scan results' }}
          
          ## 📦 Dependency Status
          - **Gum:** ${{ needs.dependency-check.result == 'success' && 'Up to date' || 'Check for updates' }}
          - **Shell Compatibility:** ✅ Bash, Zsh supported
          
          ## 🔄 Update Status
          - **Auto-updates:** ${{ needs.auto-update.result == 'skipped' && 'Not triggered' || needs.auto-update.result }}
          - **Last Check:** $(date -u)
          
          ## 📋 Recommendations
          - Run security scans regularly
          - Keep dependencies up to date
          - Test framework after updates
          - Monitor for breaking changes
          
          ---
          *Generated by GitHub Actions*
          EOF

      - name: 📤 Upload status report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-status
          path: dependency_status.md
          retention-days: 30 